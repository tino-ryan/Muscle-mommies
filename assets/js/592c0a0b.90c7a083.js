"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4443],{1283:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"api_documentation","title":"ThriftFinder External API Documentation","description":"Overview","source":"@site/docs/api_documentation.md","sourceDirName":".","slug":"/api_documentation","permalink":"/Muscle-mommies/api_documentation","draft":false,"unlisted":false,"editUrl":"https://github.com/tino-ryan/Muscle-mommies/edit/main/docs/docs/docs/api_documentation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Third-Party Libraries Used in ThriftFinder","permalink":"/Muscle-mommies/third-party-code"},"next":{"title":"ThriftFinder Firestore Database Documentation","permalink":"/Muscle-mommies/database_documentation"}}');var i=n(4848),l=n(8453);const o={},t="ThriftFinder External API Documentation",d={},c=[{value:"Overview",id:"overview",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Endpoints",id:"endpoints",level:2},{value:"1. GET /external/stores",id:"1-get-externalstores",level:3},{value:"Request",id:"request",level:4},{value:"Example Request",id:"example-request",level:4},{value:"Response",id:"response",level:4},{value:"Example Response",id:"example-response",level:4},{value:"Error Response",id:"error-response",level:4},{value:"2. POST /external/upload",id:"2-post-externalupload",level:3},{value:"Request",id:"request-1",level:4},{value:"Example Request",id:"example-request-1",level:4},{value:"Response",id:"response-1",level:4},{value:"Example Response",id:"example-response-1",level:4},{value:"Error Responses",id:"error-responses",level:4},{value:"3. GET /external/photos",id:"3-get-externalphotos",level:3},{value:"Request",id:"request-2",level:4},{value:"Example Request",id:"example-request-2",level:4},{value:"Response",id:"response-2",level:4},{value:"Example Response",id:"example-response-2",level:4},{value:"Error Responses",id:"error-responses-1",level:4},{value:"Integration with Campus Quest",id:"integration-with-campus-quest",level:2},{value:"Purpose",id:"purpose",level:3},{value:"Recommendations",id:"recommendations",level:3},{value:"Testing",id:"testing",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Testing Tools",id:"testing-tools",level:3},{value:"Test Cases",id:"test-cases",level:3},{value:"Notes",id:"notes",level:2}];function a(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"thriftfinder-external-api-documentation",children:"ThriftFinder External API Documentation"})}),"\n",(0,i.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(s.p,{children:"The ThriftFinder External API provides access to thrift store data and photo journal management for integration with the Campus Quest project. This API enables Campus Quest to:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Retrieve thrift store details to use as quest locations or advertisements, exposing thrift stores to a broader audience."}),"\n",(0,i.jsx)(s.li,{children:"Manage user photo journals by uploading and retrieving photos, stored via Cloudinary and tracked in Firestore."}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["The API is hosted at ",(0,i.jsx)(s.code,{children:"https://muscle-mommies-server.onrender.com/external"})," (update to production URL when deployed). It includes two main endpoint groups: ",(0,i.jsx)(s.strong,{children:"Stores"})," and ",(0,i.jsx)(s.strong,{children:"Photos"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsxs)(s.strong,{children:["Stores Endpoint (",(0,i.jsx)(s.code,{children:"/external/stores"}),")"]}),": No authentication required, as it\u2019s intended for public access to promote thrift stores."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsxs)(s.strong,{children:["Photos Endpoints (",(0,i.jsx)(s.code,{children:"/external/upload"}),", ",(0,i.jsx)(s.code,{children:"/external/photos"}),")"]}),": Require an API key, sent in the ",(0,i.jsx)(s.code,{children:"x-api-key"})," header. Contact the ThriftFinder team to obtain a valid API key.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Header: ",(0,i.jsx)(s.code,{children:"x-api-key: your-secure-api-key"})]}),"\n",(0,i.jsxs)(s.li,{children:["Example: ",(0,i.jsx)(s.code,{children:"x-api-key: my-unique-secret-key-123"})]}),"\n",(0,i.jsxs)(s.li,{children:["If the API key is missing or invalid, you\u2019ll receive a ",(0,i.jsx)(s.code,{children:"401 Unauthorized"})," response: ",(0,i.jsx)(s.code,{children:'{ "error": "Invalid or missing API key" }'}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"endpoints",children:"Endpoints"}),"\n",(0,i.jsx)(s.h3,{id:"1-get-externalstores",children:"1. GET /external/stores"}),"\n",(0,i.jsx)(s.p,{children:"Retrieves a list of all thrift stores from the ThriftFinder database. This can be used by Campus Quest to:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Display thrift stores as quest locations or points of interest."}),"\n",(0,i.jsx)(s.li,{children:"Promote thrift stores to Campus Quest users, increasing their visibility."}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"request",children:"Request"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Method"}),": GET"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"URL"}),": ",(0,i.jsx)(s.code,{children:"https://muscle-mommies-server.onrender.com/external/stores"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Headers"}),": None"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Query Parameters"}),": None"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Body"}),": None"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"example-request",children:"Example Request"}),"\n",(0,i.jsx)(s.p,{children:"Using cURL:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"curl https://muscle-mommies-server.onrender.com/external/stores\n"})}),"\n",(0,i.jsx)(s.p,{children:"Using JavaScript (Fetch):"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"fetch('https://muscle-mommies-server.onrender.com/external/stores')\n  .then((response) => response.json())\n  .then((data) => console.log(data))\n  .catch((error) => console.error(error));\n"})}),"\n",(0,i.jsx)(s.h4,{id:"response",children:"Response"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Status"}),": ",(0,i.jsx)(s.code,{children:"200 OK"})," on success, ",(0,i.jsx)(s.code,{children:"500 Internal Server Error"})," on failure."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Body"}),": JSON array of store objects.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"storeId"}),": Unique identifier for the store."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"storeName"}),": Name of the thrift store."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"description"}),": Store description (optional)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"address"}),": Physical address of the store."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"location"}),": Object with ",(0,i.jsx)(s.code,{children:"lat"})," (latitude) and ",(0,i.jsx)(s.code,{children:"lng"})," (longitude) for geolocation."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"profileImageURL"}),": URL of the store\u2019s profile image (optional)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"ownerId"}),": Firebase UID of the store owner."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"createdAt"}),", ",(0,i.jsx)(s.code,{children:"updatedAt"}),": Firestore timestamps."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"example-response",children:"Example Response"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'[\n  {\n    "storeId": "abc123",\n    "storeName": "Vintage Vibes",\n    "description": "Unique second-hand fashion",\n    "address": "123 Main St, Campus Town",\n    "location": { "lat": 40.7128, "lng": -74.0060 },\n    "profileImageURL": "https://res.cloudinary.com/your-cloud-name/image/upload/...",\n    "ownerId": "xyz789",\n    "createdAt": { "_seconds": 1698796800, "_nanoseconds": 0 },\n    "updatedAt": { "_seconds": 1698796800, "_nanoseconds": 0 }\n  },\n  ...\n]\n'})}),"\n",(0,i.jsx)(s.h4,{id:"error-response",children:"Error Response"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "error": "Failed to fetch thrift stores",\n  "details": "Error message here"\n}\n'})}),"\n",(0,i.jsx)(s.h3,{id:"2-post-externalupload",children:"2. POST /external/upload"}),"\n",(0,i.jsxs)(s.p,{children:["Uploads a photo to Cloudinary for use in Campus Quest\u2019s user photo journals (e.g., photos taken during quests). The photo metadata is stored in Firestore\u2019s ",(0,i.jsx)(s.code,{children:"externalImages"})," collection."]}),"\n",(0,i.jsx)(s.h4,{id:"request-1",children:"Request"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Method"}),": POST"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"URL"}),": ",(0,i.jsx)(s.code,{children:"https://muscle-mommies-server.onrender.com/external/upload"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Headers"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"x-api-key: your-secure-api-key"})," (required)"]}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"Content-Type: multipart/form-data"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Body"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"image"}),": The image file (e.g., ",(0,i.jsx)(s.code,{children:".jpg"}),", ",(0,i.jsx)(s.code,{children:".png"}),") to upload."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Query Parameters"}),": None"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"example-request-1",children:"Example Request"}),"\n",(0,i.jsx)(s.p,{children:"Using cURL:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'curl -X POST https://muscle-mommies-server.onrender.com/external/upload \\\n  -H "x-api-key: my-unique-secret-key-123" \\\n  -F "image=@/path/to/your/image.jpg"\n'})}),"\n",(0,i.jsx)(s.p,{children:"Using Postman:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Set request type to POST and URL to ",(0,i.jsx)(s.code,{children:"https://muscle-mommies-server.onrender.com/external/upload"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:['In "Headers", add ',(0,i.jsx)(s.code,{children:"x-api-key: my-unique-secret-key-123"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:['In "Body", select ',(0,i.jsx)(s.code,{children:"form-data"}),", add key ",(0,i.jsx)(s.code,{children:"image"})," (type: File), and select an image file."]}),"\n",(0,i.jsx)(s.li,{children:"Send the request."}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"response-1",children:"Response"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Status"}),": ",(0,i.jsx)(s.code,{children:"200 OK"})," on success, ",(0,i.jsx)(s.code,{children:"400 Bad Request"})," or ",(0,i.jsx)(s.code,{children:"500 Internal Server Error"})," on failure."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Body"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"imageId"}),": Cloudinary public ID of the uploaded image."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"imageURL"}),": Secure URL to access the image on Cloudinary."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"example-response-1",children:"Example Response"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "imageId": "muscle-mommies/external/abc123",\n  "imageURL": "https://res.cloudinary.com/your-cloud-name/image/upload/v1234567890/muscle-mommies/external/abc123.jpg"\n}\n'})}),"\n",(0,i.jsx)(s.h4,{id:"error-responses",children:"Error Responses"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Missing file: ",(0,i.jsx)(s.code,{children:'{ "error": "No image provided" }'})," (400)"]}),"\n",(0,i.jsxs)(s.li,{children:["Invalid API key: ",(0,i.jsx)(s.code,{children:'{ "error": "Invalid or missing API key" }'})," (401)"]}),"\n",(0,i.jsxs)(s.li,{children:["Upload failure: ",(0,i.jsx)(s.code,{children:'{ "error": "Failed to upload image", "details": "Error message here" }'})," (500)"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"3-get-externalphotos",children:"3. GET /external/photos"}),"\n",(0,i.jsxs)(s.p,{children:["Retrieves a list of all photo metadata from the ",(0,i.jsx)(s.code,{children:"externalImages"})," collection, used for displaying user photo journals in Campus Quest."]}),"\n",(0,i.jsx)(s.h4,{id:"request-2",children:"Request"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Method"}),": GET"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"URL"}),": ",(0,i.jsx)(s.code,{children:"http://muscle-mommies-server.onrender.com/external/photos"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Headers"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"x-api-key: your-secure-api-key"})," (required)"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Query Parameters"}),": None"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Body"}),": None"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"example-request-2",children:"Example Request"}),"\n",(0,i.jsx)(s.p,{children:"Using cURL:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'curl http://muscle-mommies-server.onrender.com/external/photos -H "x-api-key: my-unique-secret-key-123"\n'})}),"\n",(0,i.jsx)(s.p,{children:"Using JavaScript (Fetch):"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"fetch('http://muscle-mommies-server.onrender.com/external/photos', {\n  headers: { 'x-api-key': 'my-unique-secret-key-123' },\n})\n  .then((response) => response.json())\n  .then((data) => console.log(data))\n  .catch((error) => console.error(error));\n"})}),"\n",(0,i.jsx)(s.h4,{id:"response-2",children:"Response"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Status"}),": ",(0,i.jsx)(s.code,{children:"200 OK"})," on success, ",(0,i.jsx)(s.code,{children:"500 Internal Server Error"})," on failure."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Body"}),": JSON array of image objects.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"imageId"}),": Cloudinary public ID."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"imageURL"}),": Secure URL of the image."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"createdAt"}),": Firestore timestamp of when the image was uploaded."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"example-response-2",children:"Example Response"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'[\n  {\n    "imageId": "muscle-mommies/external/abc123",\n    "imageURL": "https://res.cloudinary.com/your-cloud-name/image/upload/v1234567890/muscle-mommies/external/abc123.jpg",\n    "createdAt": { "_seconds": 1698796800, "_nanoseconds": 0 }\n  },\n  ...\n]\n'})}),"\n",(0,i.jsx)(s.h4,{id:"error-responses-1",children:"Error Responses"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Invalid API key: ",(0,i.jsx)(s.code,{children:'{ "error": "Invalid or missing API key" }'})," (401)"]}),"\n",(0,i.jsxs)(s.li,{children:["Fetch failure: ",(0,i.jsx)(s.code,{children:'{ "error": "Failed to fetch images", "details": "Error message here" }'})," (500)"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"integration-with-campus-quest",children:"Integration with Campus Quest"}),"\n",(0,i.jsx)(s.h3,{id:"purpose",children:"Purpose"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsxs)(s.strong,{children:["Stores API (",(0,i.jsx)(s.code,{children:"GET /external/stores"}),")"]}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Use store data to create quest locations (e.g., visit a thrift store to complete a quest)."}),"\n",(0,i.jsx)(s.li,{children:"Display thrift stores as advertisements or points of interest, increasing their exposure to Campus Quest users."}),"\n",(0,i.jsxs)(s.li,{children:["Example: Show a store\u2019s ",(0,i.jsx)(s.code,{children:"storeName"}),", ",(0,i.jsx)(s.code,{children:"address"}),", and ",(0,i.jsx)(s.code,{children:"location"})," on a map for a quest to visit a thrift store."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsxs)(s.strong,{children:["Photos API (",(0,i.jsx)(s.code,{children:"POST /external/upload"}),", ",(0,i.jsx)(s.code,{children:"GET /external/photos"}),")"]}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Allow Campus Quest users to upload photos taken during quests (e.g., a photo of a thrift find)."}),"\n",(0,i.jsx)(s.li,{children:"Retrieve and display these photos in a user\u2019s photo journal, enhancing the quest experience."}),"\n",(0,i.jsxs)(s.li,{children:["Example: A user uploads a photo of a vintage jacket found at a thrift store, which is stored in Cloudinary and linked in the ",(0,i.jsx)(s.code,{children:"externalImages"})," collection."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"recommendations",children:"Recommendations"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Stores"}),": Cache store data locally in Campus Quest to reduce API calls, as store data changes infrequently."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Photos"}),": Use the ",(0,i.jsx)(s.code,{children:"imageURL"})," from responses to display images directly in the Campus Quest app. Ensure the API key is securely stored (e.g., not hardcoded in client-side code)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Error Handling"}),": Handle ",(0,i.jsx)(s.code,{children:"401"}),", ",(0,i.jsx)(s.code,{children:"400"}),", and ",(0,i.jsx)(s.code,{children:"500"})," errors gracefully in the Campus Quest UI, informing users if authentication fails or the server is unavailable."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"testing",children:"Testing"}),"\n",(0,i.jsx)(s.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Ensure the ThriftFinder server is running: ",(0,i.jsx)(s.code,{children:"node index.js"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Obtain the API key from the ThriftFinder team for ",(0,i.jsx)(s.code,{children:"/external/upload"})," and ",(0,i.jsx)(s.code,{children:"/external/photos"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Use tools like Postman, cURL, or a custom client for testing."}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"testing-tools",children:"Testing Tools"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Postman"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Create requests as described above."}),"\n",(0,i.jsxs)(s.li,{children:["For ",(0,i.jsx)(s.code,{children:"/external/upload"}),", use the ",(0,i.jsx)(s.code,{children:"form-data"})," body to upload files."]}),"\n",(0,i.jsxs)(s.li,{children:["Add the ",(0,i.jsx)(s.code,{children:"x-api-key"})," header where required."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"cURL"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Use the example commands provided."}),"\n",(0,i.jsxs)(s.li,{children:["Ensure the correct file path for uploads (e.g., ",(0,i.jsx)(s.code,{children:"/path/to/your/image.jpg"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Browser"})," (for GET requests):","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Visit ",(0,i.jsx)(s.code,{children:"http://muscle-mommies-server.onrender.com/external/stores"})," directly (no API key needed)."]}),"\n",(0,i.jsxs)(s.li,{children:["For ",(0,i.jsx)(s.code,{children:"/external/photos"}),", include the API key in a custom client or use Postman/cURL."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"test-cases",children:"Test Cases"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"GET /external/stores"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Verify you receive a list of stores with fields like ",(0,i.jsx)(s.code,{children:"storeId"}),", ",(0,i.jsx)(s.code,{children:"storeName"}),", and ",(0,i.jsx)(s.code,{children:"location"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Test with no stores in the database (should return ",(0,i.jsx)(s.code,{children:"[]"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"POST /external/upload"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Upload a valid image with the correct API key (should return ",(0,i.jsx)(s.code,{children:"imageId"})," and ",(0,i.jsx)(s.code,{children:"imageURL"}),")."]}),"\n",(0,i.jsx)(s.li,{children:"Try without an API key (should return 401)."}),"\n",(0,i.jsx)(s.li,{children:"Try without an image (should return 400)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"GET /external/photos"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Upload a few images first, then retrieve them (should return a list of image metadata)."}),"\n",(0,i.jsx)(s.li,{children:"Test with an incorrect API key (should return 401)."}),"\n",(0,i.jsxs)(s.li,{children:["Test with no images uploaded (should return ",(0,i.jsx)(s.code,{children:"[]"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Security"}),": The API key for photos endpoints must be kept confidential. Contact the ThriftFinder team to rotate or regenerate keys if needed."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Rate Limits"}),": Currently, no rate limits are enforced, but avoid excessive requests. Discuss with the ThriftFinder team for production scaling."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Production URL"}),": Replace ",(0,i.jsx)(s.code,{children:"http://muscle-mommies-server.onrender.com"})," with the production URL when deployed."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Contact"}),": For issues or additional features (e.g., filtering stores by location, linking photos to specific quests), reach out to the ThriftFinder team."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>t});var r=n(6540);const i={},l=r.createContext(i);function o(e){const s=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(l.Provider,{value:s},e.children)}}}]);
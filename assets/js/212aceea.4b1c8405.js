"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7325],{4037:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Version-control","title":"Version Control","description":"Version Control Setup","source":"@site/docs/Version-control.md","sourceDirName":".","slug":"/Version-control","permalink":"/Muscle-mommies/Version-control","draft":false,"unlisted":false,"editUrl":"https://github.com/tino-ryan/Muscle-mommies/edit/main/docs/Version-control.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Tech Stack and Setup","permalink":"/Muscle-mommies/tech-stack"}}');var t=i(4848),r=i(8453);const l={},o="Version Control",d={},c=[{value:"Version Control Setup",id:"version-control-setup",level:2},{value:"Why Git and GitHub?",id:"why-git-and-github",level:3},{value:"Issues Faced",id:"issues-faced",level:3},{value:"Pros",id:"pros",level:3},{value:"Cons",id:"cons",level:3},{value:"Linting Setup",id:"linting-setup",level:2},{value:"Tools Used",id:"tools-used",level:3},{value:"Why ESLint and Prettier?",id:"why-eslint-and-prettier",level:3},{value:"Configuration Approach",id:"configuration-approach",level:3},{value:"Issues Faced",id:"issues-faced-1",level:3},{value:"Pros",id:"pros-1",level:3},{value:"Cons",id:"cons-1",level:3},{value:"Usage Instructions",id:"usage-instructions",level:2},{value:"Running Linting",id:"running-linting",level:3},{value:"VSCode Integration",id:"vscode-integration",level:3},{value:"Committing Code",id:"committing-code",level:3},{value:"Summary",id:"summary",level:2}];function a(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"version-control",children:"Version Control"})}),"\n",(0,t.jsx)(e.h2,{id:"version-control-setup",children:"Version Control Setup"}),"\n",(0,t.jsxs)(e.p,{children:["We use ",(0,t.jsx)(e.strong,{children:"Git"})," as our version control system, hosted on ",(0,t.jsx)(e.strong,{children:"GitHub"})," for repository management. Git provides distributed version control with strong branching and merging features. GitHub offers collaborative features like pull requests, issues, and CI/CD integration."]}),"\n",(0,t.jsx)(e.h3,{id:"why-git-and-github",children:"Why Git and GitHub?"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Industry standard with wide adoption"}),"\n",(0,t.jsx)(e.li,{children:"Strong community and tooling support"}),"\n",(0,t.jsx)(e.li,{children:"Easy branching, merging, and collaboration"}),"\n",(0,t.jsx)(e.li,{children:"Integration with CI/CD pipelines"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"issues-faced",children:"Issues Faced"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Initial learning curve for new team members"}),"\n",(0,t.jsx)(e.li,{children:"Merge conflicts during parallel development"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"pros",children:"Pros"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Robust tracking of project history"}),"\n",(0,t.jsx)(e.li,{children:"Facilitates team collaboration"}),"\n",(0,t.jsx)(e.li,{children:"Integrates well with many tools"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"cons",children:"Cons"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Complex commands for beginners"}),"\n",(0,t.jsx)(e.li,{children:"Merge conflicts require manual resolution"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"linting-setup",children:"Linting Setup"}),"\n",(0,t.jsx)(e.h3,{id:"tools-used",children:"Tools Used"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"ESLint"}),": Primary linter for JavaScript and React code"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Prettier"}),": Code formatter integrated with ESLint for consistent styling"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"eslint-plugin-react"}),": React specific linting rules"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"eslint-plugin-prettier"}),": Runs Prettier as an ESLint rule"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"@eslint/js"}),": Base JavaScript config"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"@eslint/markdown"}),": Linting support for Markdown files"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"why-eslint-and-prettier",children:"Why ESLint and Prettier?"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"ESLint allows customizable linting rules and supports plugins"}),"\n",(0,t.jsx)(e.li,{children:"Prettier enforces consistent code formatting automatically"}),"\n",(0,t.jsx)(e.li,{children:"Integration between ESLint and Prettier avoids conflicts and streamlines dev workflow"}),"\n",(0,t.jsx)(e.li,{children:"Support for React via plugins"}),"\n",(0,t.jsx)(e.li,{children:"Markdown linting improves documentation quality"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"configuration-approach",children:"Configuration Approach"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Used ESLint flat config with ",(0,t.jsx)(e.code,{children:"eslint.config.mjs"})," for modern config style"]}),"\n",(0,t.jsx)(e.li,{children:"Separate overrides for JS, React, Markdown, and test files"}),"\n",(0,t.jsx)(e.li,{children:"Disabled linting for CSS files as it's out of ESLint scope"}),"\n",(0,t.jsx)(e.li,{children:"Added React version detection in settings for compatibility"}),"\n",(0,t.jsx)(e.li,{children:"Enabled Prettier as an ESLint plugin to catch formatting issues during linting"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"issues-faced-1",children:"Issues Faced"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Initial plugin resolution errors due to mismatched plugin names and config structure"}),"\n",(0,t.jsxs)(e.li,{children:["TypeErrors due to outdated plugin API usage (e.g., ",(0,t.jsx)(e.code,{children:"sourceCode.getAllComments"}),")"]}),"\n",(0,t.jsxs)(e.li,{children:["Nested ",(0,t.jsx)(e.code,{children:"extends"})," not supported in flat config style, required flattening configs"]}),"\n",(0,t.jsxs)(e.li,{children:["Conflicts between ESLint rules and Prettier formatting handled by using ",(0,t.jsx)(e.code,{children:"eslint-config-prettier"})]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"pros-1",children:"Pros"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Enforces both stylistic and code quality rules"}),"\n",(0,t.jsx)(e.li,{children:"Catches bugs early with static analysis"}),"\n",(0,t.jsx)(e.li,{children:"Prettier integration reduces bike-shedding about code style"}),"\n",(0,t.jsx)(e.li,{children:"Customizable per file type and environment"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"cons-1",children:"Cons"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Initial setup complexity and trial-and-error to get working config"}),"\n",(0,t.jsx)(e.li,{children:"Some learning curve understanding ESLint flat config"}),"\n",(0,t.jsx)(e.li,{children:"Requires developers to use compatible editor integrations or run scripts"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"usage-instructions",children:"Usage Instructions"}),"\n",(0,t.jsx)(e.h3,{id:"running-linting",children:"Running Linting"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Run ",(0,t.jsx)(e.code,{children:"npx eslint ."})," to check linting errors"]}),"\n",(0,t.jsxs)(e.li,{children:["Run ",(0,t.jsx)(e.code,{children:"npx eslint . --fix"})," to auto-fix fixable issues"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"vscode-integration",children:"VSCode Integration"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Install ESLint and Prettier extensions"}),"\n",(0,t.jsxs)(e.li,{children:["Enable ",(0,t.jsx)(e.strong,{children:"Format On Save"})," and ESLint validation in VSCode settings"]}),"\n",(0,t.jsx)(e.li,{children:"Use workspace settings to enforce consistency across team"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"committing-code",children:"Committing Code"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Use ",(0,t.jsx)(e.code,{children:"git"})," commands to manage commits and branches"]}),"\n",(0,t.jsx)(e.li,{children:"Run linter before commit to ensure code quality"}),"\n",(0,t.jsx)(e.li,{children:"Consider adding git hooks (e.g., Husky) to automate lint checks before commit (future improvement)"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsx)(e.p,{children:"The chosen version control and linting setup provide a robust framework to maintain code quality, improve collaboration, and automate formatting. While setup had challenges, the end result supports a smoother development workflow with consistent style and fewer bugs."})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(a,{...n})}):a(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>o});var s=i(6540);const t={},r=s.createContext(t);function l(n){const e=s.useContext(r);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);
// Define the structure for the 'stores' collection
const Store = {
  collection: 'stores',
  fields: {
    storeId: String, // UUID for the store
    ownerId: String, // Firebase UID of the store owner
    storeName: String,
    description: String,
    theme: String,
    address: String,
    location: {
      lat: String,
      lng: String,
    },
    profileImageURL: String,
    hours: Object, // { Monday: { open: Boolean, start: String, end: String }, ... }
    averageRating: Number, // NEW: Average rating from reviews
    reviewCount: Number, // NEW: Total number of reviews
    createdAt: Object, // Firestore Timestamp
    updatedAt: Object, // Firestore Timestamp
  },
  subcollections: {
    contactInfos: {
      collection: 'contactInfos',
      fields: {
        id: String, // UUID for the contact info
        type: String, // 'email', 'phone', 'instagram', 'facebook'
        value: String, // Contact value (e.g., 'user@example.com', '@handle')
      },
    },
  },
};

// Define the structure for the 'items' collection
const Item = {
  collection: 'items',
  fields: {
    itemId: String, // UUID for the item
    storeId: String, // Reference to storeId
    name: String,
    description: String,
    category: String,
    department: String, // Added: "mens" or "womens"
    style: String, // Added: e.g., "streetwear" or "streetwear,casual"
    size: String,
    price: Number,
    quantity: Number,
    status: String, // 'Available', 'Out of Stock', etc.
    createdAt: Object, // Firestore Timestamp
    updatedAt: Object, // Firestore Timestamp
    images: Array, // Array of { imageId, imageURL, isPrimary }
  },
};

// Define the structure for the 'itemImages' collection
const ItemImage = {
  collection: 'itemImages',
  fields: {
    imageId: String, // UUID for the image
    itemId: String, // Reference to itemId
    imageURL: String,
    isPrimary: Boolean,
  },
};

// Define the structure for the 'chats' collection
const Chat = {
  collection: 'chats',
  fields: {
    chatId: String, // e.g., "uid1_uid2"
    participants: Array, // [uid1, uid2]
    lastMessage: String,
    lastTimestamp: Object,
    itemId: String, // Optional: Linked item
    storeId: String, // Optional: Linked store
  },
};

// Define the structure for the 'messages' collection
const Message = {
  collection: 'messages',
  fields: {
    messageId: String, // Auto-generated by Firestore
    chatId: String,
    senderId: String,
    receiverId: String,
    message: String,
    timestamp: Object,
    read: Boolean, // For read receipts
    itemId: String, // Optional: Linked item
    storeId: String, // Optional: Linked store
  },
};

// Define the structure for the 'Reservations' collection
const Reservation = {
  collection: 'Reservations',
  fields: {
    reservationId: String, // UUID for the reservation
    itemId: String, // Reference to items.itemId
    userId: String, // Firebase UID of the user
    storeId: String, // Reference to stores.storeId
    status: String, // ENUM: 'Pending', 'Confirmed', 'Cancelled', 'Sold', 'Completed'
    reservedAt: Object, // Firestore Timestamp
    soldAt: Object, // NEW: Firestore Timestamp when marked as sold
    completedAt: Object, // NEW: Firestore Timestamp when customer confirms receipt
    updatedAt: Object, // Firestore Timestamp
  },
};

// NEW: Define the structure for the 'Reviews' collection (uppercase to match DB)
const Review = {
  collection: 'Reviews',
  fields: {
    reviewId: String, // Auto-generated by Firestore
    reservationId: String, // Reference to Reservations.reservationId
    itemId: String, // Reference to items.itemId
    storeId: String, // Reference to stores.storeId
    userId: String, // Firebase UID of the reviewer
    rating: Number, // 1-5 star rating
    review: String, // Review text (optional)
    createdAt: Object, // Firestore Timestamp
  },
};

module.exports = { Store, Item, ItemImage, Chat, Message, Reservation, Review };
